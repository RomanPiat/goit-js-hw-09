{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,SAAUC,SAASC,cAAc,uBACjCC,QAASF,SAASC,cAAc,sBAChCE,UAAWH,SAASC,cAAc,wBAClCG,OAAQJ,SAASC,cAAc,UAuBqB,SAA7CI,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,IAGpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAGtBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,G,GAClBA,E,IAKJS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBnB,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAE9DM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBnB,EAAAsB,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAxC9DjB,EAAKM,OAAOmB,iBAAiB,UAE7B,SAAsBC,GACtBA,EAAIC,iBACJC,QAAQC,IAAI,gBAAiB7B,EAAKC,SAAS6B,OAC3C,IAAMC,EAAaC,OAAO,GAAuBV,OAApBtB,EAAKC,SAAS6B,QACrCG,EAAYD,OAAO,GAAsBV,OAAnBtB,EAAKI,QAAQ0B,QACnCI,EAAeF,OAAO,GAAwBV,OAArBtB,EAAKK,UAAUyB,QAE9CF,QAAQC,IAAI,aAAcE,GAC1BH,QAAQC,IAAI,YAAaI,GACzBL,QAAQC,IAAI,eAAgBK,GAG5B,IADA,IAAIC,EAAeJ,EACVK,EAAE,EAAGA,GAAIF,EAAcE,GAAG,EACjC7B,EAAc6B,EAAGD,GACfA,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// читаю форму\nconst refs = {\n  delayInp: document.querySelector('input[name=\"delay\"]'),\n  stepInp: document.querySelector('input[name=\"step\"]'),\n  amountInp: document.querySelector('input[name=\"amount\"]'),\n  onForm: document.querySelector('.form'),\n}\nrefs.onForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\nevt.preventDefault();\nconsole.log('refs.delayInp', refs.delayInp.value)\nconst firstDelay = Number(`${refs.delayInp.value}`);\nconst stepDelay = Number(`${refs.stepInp.value}`);\nconst promiseCount = Number(`${refs.amountInp.value}`);\n\nconsole.log('firstDelay', firstDelay);\nconsole.log('stepDelay', stepDelay);\nconsole.log('promiseCount', promiseCount);\n\nlet currentDelay = firstDelay;\nfor (let i=1; i<= promiseCount; i+=1) {\n  createPromise(i, currentDelay);\n    currentDelay += stepDelay;\n}\n}\n\n// Функция создания промиса. номер создаваемого промиса (position), задержка (delay)\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n          // Fulfill\n        resolve({ position, delay });\n      }\n          // Reject\n      reject({ position, delay });\n    }, delay);\n  });\n\n// вывод результатов промиса\npromise\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delayInp","document","querySelector","stepInp","amountInp","onForm","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","console","log","value","firstDelay","Number","stepDelay","promiseCount","currentDelay","i"],"version":3,"file":"03-promises.77d78857.js.map"}