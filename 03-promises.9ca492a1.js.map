{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGU,MAAJC,EAAO,CACXC,SAAUC,SAASC,cAAc,uBACjCC,QAASF,SAASC,cAAc,sBAChCE,UAAWH,SAASC,cAAc,wBAClCG,OAAQJ,SAASC,cAAc,UAyBqB,SAA7CI,EAAcC,EAAUC,GACf,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,KAGpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IACpBS,QAAQC,IAAI,MAGdP,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,IACnBS,QAAQC,IAAI,IAAM,GACjBV,EAAM,IAKVW,MAAK,EAACJ,SAAEA,EAAQC,MAAEA,MACjBnB,EAAAuB,OAAOC,QAAQ,uBAAqBN,QAAiBC,MAAU,IAEhEM,OAAM,EAACP,SAAEA,EAAQC,MAAEA,MAClBnB,EAAAuB,OAAOG,QAAQ,sBAAoBR,QAAeC,MAAU,G,CA5ChEjB,EAAKM,OAAOmB,iBAAiB,UAE7B,SAAsBC,GACtBA,EAAIC,iBACJT,QAAQC,IAAI,gBAAiBnB,EAAKC,SAAS2B,OAC3C,MAAMC,EAAaC,OAAO,GAAG9B,EAAKC,SAAS2B,SACrCG,EAAYD,OAAO,GAAG9B,EAAKI,QAAQwB,SACnCI,EAAeF,OAAO,GAAG9B,EAAKK,UAAUuB,SAE9CV,QAAQC,IAAI,aAAcU,GAC1BX,QAAQC,IAAI,YAAaY,GACzBb,QAAQC,IAAI,eAAgBa,GAE5B,IAAIC,EAAeJ,EACnB,IAAK,IAAIK,EAAE,EAAGA,EAAGF,EAAcE,GAAG,EACX,IAAjBD,IACFA,GAAgBF,GAElBxB,EAAc2B,EAAI,EAAGD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// читаю форму\nconst refs = {\n  delayInp: document.querySelector('input[name=\"delay\"]'),\n  stepInp: document.querySelector('input[name=\"step\"]'),\n  amountInp: document.querySelector('input[name=\"amount\"]'),\n  onForm: document.querySelector('.form'),\n}\nrefs.onForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\nevt.preventDefault();\nconsole.log('refs.delayInp', refs.delayInp.value)\nconst firstDelay = Number(`${refs.delayInp.value}`);\nconst stepDelay = Number(`${refs.stepInp.value}`);\nconst promiseCount = Number(`${refs.amountInp.value}`);\n\nconsole.log('firstDelay', firstDelay);\nconsole.log('stepDelay', stepDelay);\nconsole.log('promiseCount', promiseCount);\n\nlet currentDelay = firstDelay;\nfor (let i=0; i< promiseCount; i+=1) {\n  if (currentDelay !== 0) {\n    currentDelay += stepDelay;\n  }\n  createPromise(i + 1, currentDelay);\n}\n}\n\n// Функция создания промиса. номер создаваемого промиса (position), задержка (delay)\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n          // Fulfill\n        resolve({ position, delay });\n        console.log('✅')\n      }\n          // Reject\n      reject({ position, delay });\n      console.log('❌')\n    }, delay);\n  });\n\n// вывод результатов промиса\npromise\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","delayInp","document","querySelector","stepInp","amountInp","onForm","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","console","log","then","Notify","success","catch","failure","addEventListener","evt","preventDefault","value","firstDelay","Number","stepDelay","promiseCount","currentDelay","i"],"version":3,"file":"03-promises.9ca492a1.js.map"}